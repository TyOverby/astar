var searchIndex = {};
searchIndex['astar'] = {"items":[[0,"","astar",""],[3,"astar","","Perform an A* search on the provided search-problem."],[3,"astar_r","",""],[6,"SearchProblem","","A SearchProblem is a description of the problem that will be solved with A*.\nImplementing this trait will describe the problem well enough that it can\nbe solved without any more information.\nN is the type of one of the search-states and\nC is the type of the cost to get from one state to another."],[9,"start","","A state representing the start of the search.",0],[9,"is_end","","Check to see if a state is the goal state.",0],[9,"heuristic","","A function that estimates the cost to get from\na node to the end.\nheuristic(end_state) should always be 0.",0],[9,"neighbors","","A function returning the neighbors of a search state along\nwith the cost to get to that state.",0],[10,"estimate_length","","This method is used if an estimated length of the path\nis available.",0],[6,"ReusableSearchProblem","","ReusableSearchProblem is like a regular SearchProblem but without\nthe `start()` and `is_end()` checks.  Instead, the start and end\nwill be provided when `astar_r()` is called."],[9,"heuristic","","A function that estimates the cost to get from\na node to the end.\nheuristic(end_state) should always be 0.",1],[9,"neighbors","","A function returning the neighbors of a search state along\nwith the cost to get to that state.",1],[10,"estimate_length","","This method is used if an estimated length of the path\nis available.",1]],"paths":[[6,"SearchProblem"],[6,"ReusableSearchProblem"]]};
initSearch(searchIndex);
